@model JollibeeClone.ViewModels.ResetPasswordViewModel
@{
    ViewData["Title"] = "Đặt Lại Mật Khẩu";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Jollibee</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/auth.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Fonts -->
    <link href="https://db.onlinewebfonts.com/c/870c14ea660dc49cbcf9c92af21392af?family=Merge+Black+W00+Regular" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="auth-container">
        <div class="auth-card" style="max-width: 500px;">
            <div class="auth-header">
                <button type="button" class="close-btn" onclick="window.location.href='@Url.Action("Login", "Account")'" title="Quay lại đăng nhập">
                    <i class="fas fa-times"></i>
                </button>
                <h1>ĐẶT LẠI MẬT KHẨU</h1>
                <p>Vui lòng nhập mật khẩu mới.</p>
            </div>
            
            <div class="auth-body">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        @TempData["ErrorMessage"]
                    </div>
                }

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle me-2"></i>
                        @TempData["SuccessMessage"]
                    </div>
                }

                <form asp-action="ResetPassword" method="post" id="resetPasswordForm">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.PhoneNumber)
                    
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-phone me-2"></i>Số điện thoại
                        </label>
                        <input type="text" class="form-control" value="@Model.PhoneNumber" readonly style="background-color: #f8f9fa;" />
                        <div class="form-text">
                            <i class="fas fa-shield-alt me-1 text-success"></i>
                            Độ bảo mật: Không
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="NewPassword" class="form-label">
                            <i class="fas fa-lock me-2"></i>@Html.DisplayNameFor(m => m.NewPassword) *
                        </label>
                        <div class="position-relative">
                            <input asp-for="NewPassword" type="password" class="form-control @(!Html.ViewData.ModelState.ContainsKey("NewPassword") || Html.ViewData.ModelState["NewPassword"]!.Errors.Count == 0 ? "" : "is-invalid")" 
                                   placeholder="Nhập mật khẩu mới" 
                                   autocomplete="new-password" 
                                   id="newPasswordInput" />
                            <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y me-3" 
                                    style="border: none; background: none; color: #6c757d;" onclick="togglePassword('newPasswordInput', 'newPasswordIcon')" id="toggleNewPasswordBtn">
                                <i class="fas fa-eye" id="newPasswordIcon"></i>
                            </button>
                        </div>
                        <span asp-validation-for="NewPassword" class="invalid-feedback"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ConfirmPassword" class="form-label">
                            <i class="fas fa-lock me-2"></i>@Html.DisplayNameFor(m => m.ConfirmPassword) *
                        </label>
                        <div class="position-relative">
                            <input asp-for="ConfirmPassword" type="password" class="form-control @(!Html.ViewData.ModelState.ContainsKey("ConfirmPassword") || Html.ViewData.ModelState["ConfirmPassword"]!.Errors.Count == 0 ? "" : "is-invalid")" 
                                   placeholder="Nhập lại mật khẩu mới" 
                                   autocomplete="new-password" 
                                   id="confirmPasswordInput" />
                            <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y me-3" 
                                    style="border: none; background: none; color: #6c757d;" onclick="togglePassword('confirmPasswordInput', 'confirmPasswordIcon')" id="toggleConfirmPasswordBtn">
                                <i class="fas fa-eye" id="confirmPasswordIcon"></i>
                            </button>
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="invalid-feedback"></span>
                    </div>

                    @if (ViewData.ModelState.ErrorCount > 0 && (!ViewData.ModelState.ContainsKey("") || ViewData.ModelState[""]!.Errors.Count > 0))
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-circle me-2"></i>
                            @Html.ValidationSummary(false, "", new { @class = "mb-0" })
                        </div>
                    }

                    <button type="submit" class="btn btn-jollibee" id="submitBtn">
                        <i class="fas fa-key me-2"></i>
                        LƯU MẬT KHẨU
                    </button>

                    <div class="auth-links">
                        <p><a asp-action="ForgotPassword">← Quay lại nhập số điện thoại</a></p>
                        <p><a asp-action="Login">← Quay lại đăng nhập</a></p>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/jquery.validate.min.js"></script>
    <script src="~/js/jquery.validate.unobtrusive.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // Form submission với loading state
            $('#resetPasswordForm').on('submit', function() {
                var submitBtn = $('#submitBtn');
                submitBtn.prop('disabled', true);
                submitBtn.addClass('loading');
                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Đang lưu...');
            });

            // Auto focus vào input mật khẩu mới
            $('#NewPassword').focus();

            // Enter key để submit form
            $('#resetPasswordForm input').on('keypress', function(e) {
                if (e.which == 13) {
                    $('#resetPasswordForm').submit();
                }
            });

            // Kiểm tra mật khẩu khớp nhau real-time
            $('#ConfirmPassword').on('input', function() {
                var newPassword = $('#NewPassword').val();
                var confirmPassword = $(this).val();
                
                if (confirmPassword && newPassword !== confirmPassword) {
                    $(this).addClass('is-invalid');
                    $(this).next('.invalid-feedback').text('Mật khẩu xác nhận không khớp');
                } else {
                    $(this).removeClass('is-invalid');
                }
            });

            // Kiểm tra độ mạnh mật khẩu
            $('#NewPassword').on('input', function() {
                var password = $(this).val();
                var strength = checkPasswordStrength(password);
                
                // Cập nhật thông báo độ bảo mật
                var strengthText = strength.text;
                var strengthColor = strength.color;
                
                if (password.length > 0) {
                    $(this).parent().find('.form-text').remove();
                    $(this).parent().append(`
                        <div class="form-text">
                            <i class="fas fa-shield-alt me-1" style="color: ${strengthColor};"></i>
                            Độ bảo mật: ${strengthText}
                        </div>
                    `);
                }
            });
        });

        // Toggle password visibility
        function togglePassword(inputId, iconId) {
            var passwordInput = document.getElementById(inputId);
            var passwordIcon = document.getElementById(iconId);
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                passwordIcon.classList.remove('fa-eye');
                passwordIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                passwordIcon.classList.remove('fa-eye-slash');
                passwordIcon.classList.add('fa-eye');
            }
        }

        // Kiểm tra độ mạnh mật khẩu
        function checkPasswordStrength(password) {
            if (password.length < 6) {
                return { text: 'Yếu', color: '#dc3545' };
            } else if (password.length < 8) {
                return { text: 'Trung bình', color: '#ffc107' };
            } else if (password.length >= 8 && /[A-Z]/.test(password) && /[a-z]/.test(password) && /\d/.test(password)) {
                return { text: 'Mạnh', color: '#28a745' };
            } else {
                return { text: 'Trung bình', color: '#ffc107' };
            }
        }
    </script>
</body>
</html> 