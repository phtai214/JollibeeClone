@model JollibeeClone.Areas.Admin.ViewModels.PromotionListViewModel

@{
    ViewData["Title"] = "Quản lý Voucher";
}

@section Styles {
    <link rel="stylesheet" href="~/css/promotion-admin.css" asp-append-version="true" />
}

<div class="promotion-management">
    <!-- Header với nút thêm mới -->
    <div class="promotion-header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="page-title">
                    <i class="fas fa-tags text-jollibee-red me-2"></i>
                    Quản lý Voucher
                </h2>
                <p class="text-muted mb-0">Quản lý tất cả voucher giảm giá của cửa hàng</p>
            </div>
            <a href="@Url.Action("Create")" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i>
                Tạo Voucher mới
            </a>
        </div>
    </div>

    <!-- Tìm kiếm và bộ lọc -->
    <div class="filter-section">
        <form method="get" id="filterForm">
            <div class="row">
                <div class="col-md-3">
                    <div class="search-box">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" name="search" id="searchInput" class="form-control" 
                               placeholder="Tìm kiếm voucher..." value="@Model.SearchTerm">
                    </div>
                </div>
                <div class="col-md-2">
                    <select name="status" id="statusFilter" class="form-select">
                        <option value="">Tất cả trạng thái</option>
                        <option value="active" selected="@(Model.StatusFilter == "active")">Đang hoạt động</option>
                        <option value="upcoming" selected="@(Model.StatusFilter == "upcoming")">Sắp diễn ra</option>
                        <option value="expired" selected="@(Model.StatusFilter == "expired")">Đã hết hạn</option>
                        <option value="inactive" selected="@(Model.StatusFilter == "inactive")">Không hoạt động</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select name="sort" id="sortBy" class="form-select">
                        <option value="" selected="@(Model.SortBy == "")">Mới nhất</option>
                        <option value="name" selected="@(Model.SortBy == "name")">Tên A-Z</option>
                        <option value="name-desc" selected="@(Model.SortBy == "name-desc")">Tên Z-A</option>
                        <option value="startdate" selected="@(Model.SortBy == "startdate")">Ngày bắt đầu</option>
                        <option value="enddate" selected="@(Model.SortBy == "enddate")">Ngày kết thúc</option>
                        <option value="usage" selected="@(Model.SortBy == "usage")">Lượt sử dụng</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="fas fa-filter me-1"></i>
                        Lọc
                    </button>
                </div>
                <div class="col-md-3 text-end">
                    <div class="view-toggle-group">
                        <button type="button" class="btn btn-outline-secondary view-btn active" data-view="grid" title="Dạng thẻ">
                            <i class="fas fa-th"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary view-btn" data-view="list" title="Dạng danh sách">
                            <i class="fas fa-list"></i>
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <!-- Thông tin kết quả -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="result-count">
            <strong id="promotionCount">@Model.TotalCount</strong> voucher được tìm thấy
        </div>
        @if (!string.IsNullOrEmpty(Model.SearchTerm) || !string.IsNullOrEmpty(Model.StatusFilter))
        {
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-sm">
                <i class="fas fa-times me-1"></i>
                Xóa bộ lọc
            </a>
        }
    </div>

    <!-- Alert Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Danh sách voucher -->
    @if (Model.Promotions.Any())
    {
        <!-- Grid View -->
        <div id="gridView" class="view-container">
            <div class="row" id="promotionGrid">
                @foreach (var promotion in Model.Promotions)
                {
                    var statusClass = promotion.IsExpired ? "expired" : promotion.IsUpcoming ? "upcoming" : promotion.IsRunning ? "running" : "inactive";
                    var statusText = promotion.IsExpired ? "Đã hết hạn" : promotion.IsUpcoming ? "Sắp diễn ra" : promotion.IsRunning ? "Đang hoạt động" : "Không hoạt động";
                    var statusBadgeClass = promotion.IsExpired ? "expired" : promotion.IsUpcoming ? "upcoming" : promotion.IsRunning ? "active" : "inactive";

                    <div class="col-xl-4 col-lg-6 col-md-6 mb-4 promotion-item">
                        <div class="promotion-card @statusClass">
                            <!-- Card Header -->
                            <div class="promotion-card-header">
                                <div class="status-indicator">
                                    <span class="status-badge @statusBadgeClass">@statusText</span>
                                </div>
                                
                                <h3 class="promotion-title">@promotion.PromotionName</h3>
                                
                                @if (!string.IsNullOrEmpty(promotion.CouponCode))
                                {
                                    <div class="promotion-code">@promotion.CouponCode</div>
                                }
                                
                                @if (!string.IsNullOrEmpty(promotion.Description))
                                {
                                    <p class="promotion-description">@promotion.Description</p>
                                }
                            </div>

                            <!-- Card Body -->
                            <div class="promotion-card-body">
                                <!-- Discount Display -->
                                <div class="discount-display">
                                    <div class="discount-value">@promotion.DiscountValue%</div>
                                    <div class="discount-type">Giảm @promotion.DiscountType</div>
                                </div>

                                <!-- Date Range -->
                                <div class="date-range">
                                    <div class="date-item">
                                        <div class="date-label">Bắt đầu</div>
                                        <div class="date-value">@promotion.StartDate.ToString("dd/MM/yyyy")</div>
                                    </div>
                                    <div class="date-separator">
                                        <i class="fas fa-arrow-right"></i>
                                    </div>
                                    <div class="date-item">
                                        <div class="date-label">Kết thúc</div>
                                        <div class="date-value">@promotion.EndDate.ToString("dd/MM/yyyy")</div>
                                    </div>
                                </div>

                                <!-- Usage Progress -->
                                @if (promotion.MaxUses.HasValue)
                                {
                                    <div class="usage-progress">
                                        <div class="usage-info">
                                            <span class="usage-label">Đã sử dụng: @promotion.UsesCount/@promotion.MaxUses</span>
                                            <span class="usage-percentage">@promotion.UsagePercentage.ToString("F1")%</span>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar" style="width: @(promotion.UsagePercentage)%"></div>
                                        </div>
                                    </div>
                                }

                                <!-- Stats -->
                                <div class="promotion-stats">
                                    <div class="stat-item">
                                        <span class="stat-number">@promotion.ProductCount</span>
                                        <span class="stat-label">Sản phẩm</span>
                                    </div>
                                    <div class="stat-item">
                                        <span class="stat-number">@promotion.CategoryCount</span>
                                        <span class="stat-label">Danh mục</span>
                                    </div>
                                </div>

                                <!-- Scope Info -->
                                <div class="scope-info">
                                    <div class="scope-item">
                                        <span class="scope-count">@promotion.ProductCount</span>
                                        <span class="scope-label">Sản phẩm áp dụng</span>
                                    </div>
                                    <div class="scope-item">
                                        <span class="scope-count">@promotion.CategoryCount</span>
                                        <span class="scope-label">Danh mục áp dụng</span>
                                    </div>
                                </div>

                                @if (promotion.MinOrderValue.HasValue)
                                {
                                    <div class="text-center mt-2">
                                        <small class="text-muted">
                                            <i class="fas fa-shopping-cart me-1"></i>
                                            Đơn tối thiểu: @promotion.MinOrderValue.Value.ToString("N0") VNĐ
                                        </small>
                                    </div>
                                }
                            </div>

                            <!-- Card Actions -->
                            <div class="promotion-actions">
                                <a href="@Url.Action("Details", new { id = promotion.PromotionID })" class="action-btn btn-view">
                                    <i class="fas fa-eye"></i>
                                    Xem
                                </a>
                                <a href="@Url.Action("Edit", new { id = promotion.PromotionID })" class="action-btn btn-edit">
                                    <i class="fas fa-edit"></i>
                                    Sửa
                                </a>
                                <a href="@Url.Action("Delete", new { id = promotion.PromotionID })" class="action-btn btn-delete">
                                    <i class="fas fa-trash"></i>
                                    Xóa
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- List View -->
        <div id="listView" class="view-container" style="display: none;">
            <div class="promotion-list">
                @foreach (var promotion in Model.Promotions)
                {
                    var statusClass = promotion.IsExpired ? "expired" : promotion.IsUpcoming ? "upcoming" : promotion.IsRunning ? "running" : "inactive";
                    var statusText = promotion.IsExpired ? "Đã hết hạn" : promotion.IsUpcoming ? "Sắp diễn ra" : promotion.IsRunning ? "Đang hoạt động" : "Không hoạt động";
                    var statusBadgeClass = promotion.IsExpired ? "expired" : promotion.IsUpcoming ? "upcoming" : promotion.IsRunning ? "active" : "inactive";

                    <div class="promotion-list-item @statusClass">
                        <div class="promotion-list-header">
                            <div class="promotion-list-info">
                                <h4>@promotion.PromotionName</h4>
                                <p>@promotion.Description</p>
                                @if (!string.IsNullOrEmpty(promotion.CouponCode))
                                {
                                    <span class="promotion-code">@promotion.CouponCode</span>
                                }
                            </div>
                            <div class="text-center">
                                <div class="discount-value">@promotion.DiscountValue%</div>
                                <small class="text-muted">Giảm giá</small>
                            </div>
                            <div class="text-center">
                                <div>@promotion.StartDate.ToString("dd/MM/yyyy")</div>
                                <div>@promotion.EndDate.ToString("dd/MM/yyyy")</div>
                                <small class="text-muted">Thời gian</small>
                            </div>
                            <div class="text-center">
                                <span class="status-badge @statusBadgeClass">@statusText</span>
                                @if (promotion.MaxUses.HasValue)
                                {
                                    <div class="mt-2">
                                        <small>@promotion.UsesCount/@promotion.MaxUses lượt</small>
                                    </div>
                                }
                            </div>
                            <div class="promotion-actions">
                                <a href="@Url.Action("Details", new { id = promotion.PromotionID })" class="action-btn btn-view btn-sm">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="@Url.Action("Edit", new { id = promotion.PromotionID })" class="action-btn btn-edit btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Delete", new { id = promotion.PromotionID })" class="action-btn btn-delete btn-sm">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-tags fa-5x text-muted"></i>
            </div>
            <h3 class="text-muted">Chưa có voucher nào</h3>
            <p class="text-muted mb-4">Bắt đầu tạo voucher đầu tiên cho cửa hàng của bạn</p>
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>
                Tạo Voucher mới
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // View toggle functionality
            $('.view-btn').on('click', function() {
                const view = $(this).data('view');
                $('.view-btn').removeClass('active');
                $(this).addClass('active');
                
                if (view === 'grid') {
                    $('#gridView').show();
                    $('#listView').hide();
                } else {
                    $('#gridView').hide();
                    $('#listView').show();
                }
                
                // Save preference
                localStorage.setItem('promotionView', view);
            });
            
            // Restore view preference
            const savedView = localStorage.getItem('promotionView');
            if (savedView) {
                $(`.view-btn[data-view="${savedView}"]`).click();
            }
            
            // Auto-submit form on filter changes
            $('#statusFilter, #sortBy').on('change', function() {
                $('#filterForm').submit();
            });
            
            // Search with delay
            let searchTimeout;
            $('#searchInput').on('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    $('#filterForm').submit();
                }, 500);
            });
            
            // Animate progress bars
            $('.progress-bar').each(function() {
                const width = $(this).css('width');
                $(this).css('width', '0').animate({ width: width }, 1000);
            });
            
            // Tooltip for action buttons
            $('[title]').tooltip();
        });
    </script>
} 