@model JollibeeClone.Areas.Admin.Models.Orders

@{
    ViewData["Title"] = "Cập nhật trạng thái đơn hàng";
}

@section Styles {
    <link rel="stylesheet" href="~/css/order-admin.css" asp-append-version="true" />
}

<div class="update-status">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="page-title">
                <i class="fas fa-edit text-jollibee-red me-2"></i>
                Cập nhật trạng thái đơn hàng #@Model.OrderCode
            </h2>
            <p class="text-muted">Thay đổi trạng thái xử lý đơn hàng</p>
        </div>
        <div class="header-actions">
            <a href="@Url.Action("Details", new { id = Model.OrderID })" class="btn btn-outline-secondary me-2">
                <i class="fas fa-eye me-2"></i>
                Xem chi tiết
            </a>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>
                Quay lại danh sách
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <!-- Form cập nhật trạng thái -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-sync-alt me-2"></i>
                        Cập nhật trạng thái
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="UpdateStatus" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="OrderID" value="@Model.OrderID" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label"><strong>Trạng thái hiện tại:</strong></label>
                                    <div class="current-status">
                                        @{
                                            string currentStatusClass = "secondary";
                                            string currentStatusIcon = "fas fa-clock";
                                            switch (Model.OrderStatusID)
                                            {
                                                case 1: // Chờ xác nhận
                                                    currentStatusClass = "warning";
                                                    currentStatusIcon = "fas fa-clock";
                                                    break;
                                                case 2: // Đã xác nhận
                                                    currentStatusClass = "info";
                                                    currentStatusIcon = "fas fa-check-circle";
                                                    break;
                                                case 3: // Đang chuẩn bị
                                                    currentStatusClass = "primary";
                                                    currentStatusIcon = "fas fa-utensils";
                                                    break;
                                                case 4: // Đang giao
                                                    currentStatusClass = "warning";
                                                    currentStatusIcon = "fas fa-shipping-fast";
                                                    break;
                                                case 5: // Đã giao
                                                    currentStatusClass = "success";
                                                    currentStatusIcon = "fas fa-check-double";
                                                    break;
                                                case 6: // Đã hủy
                                                    currentStatusClass = "danger";
                                                    currentStatusIcon = "fas fa-times-circle";
                                                    break;
                                            }
                                        }
                                        <span class="badge bg-@currentStatusClass fs-6">
                                            <i class="@currentStatusIcon me-1"></i>
                                            @Model.OrderStatus?.StatusName
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="NewOrderStatusID" class="form-label"><strong>Trạng thái mới:</strong> <span class="text-danger">*</span></label>
                                    <select name="NewOrderStatusID" class="form-select" required>
                                        <option value="">-- Chọn trạng thái mới --</option>
                                        @if (ViewBag.OrderStatuses != null)
                                        {
                                            @foreach (var status in (IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>)ViewBag.OrderStatuses)
                                            {
                                                <option value="@status.Value">@status.Text</option>
                                            }
                                        }
                                    </select>
                                    <div class="form-text">
                                        Chỉ có thể chuyển sang các trạng thái được phép theo quy trình xử lý đơn hàng.
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <div class="alert alert-info">
                                <h6 class="alert-heading">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Quy trình xử lý đơn hàng:
                                </h6>
                                <div class="status-flow">
                                    <div class="status-step">
                                        <span class="badge bg-warning">
                                            <i class="fas fa-clock me-1"></i>
                                            Chờ xác nhận
                                        </span>
                                        <i class="fas fa-arrow-right mx-2 text-muted"></i>
                                    </div>
                                    <div class="status-step">
                                        <span class="badge bg-info">
                                            <i class="fas fa-check-circle me-1"></i>
                                            Đã xác nhận
                                        </span>
                                        <i class="fas fa-arrow-right mx-2 text-muted"></i>
                                    </div>
                                    <div class="status-step">
                                        <span class="badge bg-primary">
                                            <i class="fas fa-utensils me-1"></i>
                                            Đang chuẩn bị
                                        </span>
                                        <i class="fas fa-arrow-right mx-2 text-muted"></i>
                                    </div>
                                    <div class="status-step">
                                        <span class="badge bg-warning">
                                            <i class="fas fa-shipping-fast me-1"></i>
                                            Đang giao
                                        </span>
                                        <i class="fas fa-arrow-right mx-2 text-muted"></i>
                                    </div>
                                    <div class="status-step">
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-double me-1"></i>
                                            Đã giao
                                        </span>
                                    </div>
                                </div>
                                <hr class="my-2">
                                <small class="text-muted">
                                    <strong>Lưu ý:</strong> Có thể hủy đơn hàng ở các bước trước khi giao. Không thể hủy khi đang giao hàng.
                                </small>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end gap-2">
                            <a href="@Url.Action("Details", new { id = Model.OrderID })" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-2"></i>
                                Hủy bỏ
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>
                                Cập nhật trạng thái
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Thông tin đơn hàng tóm tắt -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        Thông tin đơn hàng
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label"><strong>Mã đơn hàng:</strong></label>
                        <div class="form-control-plaintext">
                            <span class="badge bg-primary">#@Model.OrderCode</span>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label"><strong>Khách hàng:</strong></label>
                        <div class="form-control-plaintext">
                            <i class="fas fa-user me-2"></i>
                            @Model.CustomerFullName
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label"><strong>Ngày đặt:</strong></label>
                        <div class="form-control-plaintext">
                            <i class="fas fa-calendar me-2"></i>
                            @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label"><strong>Tổng tiền:</strong></label>
                        <div class="form-control-plaintext">
                            <i class="fas fa-money-bill me-2"></i>
                            <strong class="text-success">@Model.TotalAmount.ToString("N0") ₫</strong>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label"><strong>Phương thức thanh toán:</strong></label>
                        <div class="form-control-plaintext">
                            <i class="fas fa-credit-card me-2"></i>
                            @Model.PaymentMethod?.MethodName
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.NotesByCustomer))
                    {
                        <div class="mb-3">
                            <label class="form-label"><strong>Ghi chú:</strong></label>
                            <div class="form-control-plaintext">
                                <div class="alert alert-light border small">
                                    <i class="fas fa-sticky-note me-2"></i>
                                    @Model.NotesByCustomer
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Sản phẩm trong đơn hàng -->
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-shopping-bag me-2"></i>
                        Sản phẩm (@Model.OrderItems?.Count())
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.OrderItems != null && Model.OrderItems.Any())
                    {
                        @foreach (var item in Model.OrderItems)
                        {
                            <div class="order-item mb-3">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h6 class="mb-1">@item.ProductNameSnapshot</h6>
                                        <small class="text-muted">
                                            Số lượng: @item.Quantity x @item.UnitPrice.ToString("N0")₫
                                        </small>
                                    </div>
                                    <div class="text-end">
                                        <strong>@item.Subtotal.ToString("N0") ₫</strong>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Confirmation before status update
            $('form').on('submit', function(e) {
                var newStatus = $('select[name="NewOrderStatusID"] option:selected').text();
                var orderCode = '@Model.OrderCode';
                
                if (!newStatus || newStatus === '-- Chọn trạng thái mới --') {
                    e.preventDefault();
                    alert('Vui lòng chọn trạng thái mới cho đơn hàng.');
                    return false;
                }
                
                var confirmed = confirm(`Bạn có chắc chắn muốn cập nhật trạng thái đơn hàng #${orderCode} thành "${newStatus}"?`);
                if (!confirmed) {
                    e.preventDefault();
                    return false;
                }
            });

            // Status selection change event
            $('select[name="NewOrderStatusID"]').change(function() {
                var selectedValue = $(this).val();
                var selectedText = $(this).find('option:selected').text();
                
                if (selectedValue) {
                    $(this).removeClass('is-invalid');
                } else {
                    $(this).addClass('is-invalid');
                }
            });
        });
    </script>
}

<style>
    .update-status .page-title {
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .update-status .text-jollibee-red {
        color: #dc3545;
    }

    .update-status .header-actions .btn {
        min-width: 140px;
    }

    .update-status .card-title {
        color: #495057;
        font-weight: 600;
    }

    .update-status .form-label {
        color: #6c757d;
        font-size: 0.9rem;
        margin-bottom: 0.3rem;
    }

    .update-status .form-control-plaintext {
        padding: 0.375rem 0;
        border-bottom: 1px solid #e9ecef;
        margin-bottom: 0.5rem;
    }

    .update-status .current-status {
        padding: 0.5rem 0;
    }

    .update-status .badge {
        font-size: 0.8rem;
        padding: 0.5em 0.75em;
    }

    .update-status .status-flow {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 0.5rem;
    }

    .update-status .status-step {
        display: flex;
        align-items: center;
    }

    .update-status .order-item {
        padding: 0.75rem;
        border: 1px solid #e9ecef;
        border-radius: 0.375rem;
        background-color: #f8f9fa;
    }

    .update-status .alert-info {
        border-color: #b8daff;
        background-color: #d1ecf1;
    }

    .update-status .alert-heading {
        margin-bottom: 0.75rem;
        color: #0c5460;
    }

    .update-status .btn-primary {
        background-color: #dc3545;
        border-color: #dc3545;
    }

    .update-status .btn-primary:hover {
        background-color: #c82333;
        border-color: #bd2130;
    }

    .update-status .form-select:focus {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
    }

    .update-status .form-select.is-invalid {
        border-color: #dc3545;
    }

    @media (max-width: 768px) {
        .update-status .status-flow {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .update-status .status-step {
            margin-bottom: 0.5rem;
        }
        
        .update-status .status-step .fa-arrow-right {
            transform: rotate(90deg);
        }
    }
</style> 