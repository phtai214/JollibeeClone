@model IEnumerable<JollibeeClone.Areas.Admin.Models.Categories>

@{
    ViewData["Title"] = "Quản lý danh mục";
}

<div class="category-management">
    <!-- Header với nút thêm mới -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="page-title">
                <i class="fas fa-list text-jollibee-red me-2"></i>
                Quản lý danh mục
            </h2>
            <p class="text-muted">Quản lý tất cả danh mục sản phẩm của cửa hàng</p>
        </div>
        <a href="@Url.Action("Create")" class="btn btn-primary btn-lg">
            <i class="fas fa-plus me-2"></i>
            Thêm danh mục mới
        </a>
    </div>

    <!-- Tìm kiếm và bộ lọc -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="search-box">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm danh mục...">
                    </div>
                </div>
                <div class="col-md-3">
                    <select id="statusFilter" class="form-select">
                        <option value="">Tất cả trạng thái</option>
                        <option value="true">Hoạt động</option>
                        <option value="false">Không hoạt động</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="parentFilter" class="form-select">
                        <option value="">Tất cả loại</option>
                        <option value="parent">Danh mục cha</option>
                        <option value="child">Danh mục con</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Danh sách danh mục -->
    @if (Model.Any())
    {
        <div class="row" id="categoryGrid">
            @foreach (var category in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4 category-item" 
                     data-name="@category.CategoryName.ToLower()"
                     data-status="@category.IsActive.ToString().ToLower()"
                     data-type="@(category.ParentCategoryID.HasValue ? "child" : "parent")">
                    <div class="category-card">
                        <div class="category-image">
                            @if (!string.IsNullOrEmpty(category.ImageUrl))
                            {
                                <img src="@category.ImageUrl" alt="@category.CategoryName" />
                            }
                            else
                            {
                                <div class="no-image">
                                    <i class="fas fa-image"></i>
                                </div>
                            }
                            <div class="category-overlay">
                                <span class="badge status-badge @(category.IsActive ? "status-active" : "status-inactive")">
                                    @(category.IsActive ? "Hoạt động" : "Không hoạt động")
                                </span>
                            </div>
                        </div>
                        
                        <div class="category-content">
                            <h5 class="category-title">@category.CategoryName</h5>
                            @if (!string.IsNullOrEmpty(category.Description))
                            {
                                <p class="category-description">@category.Description</p>
                            }
                            
                            <div class="category-meta">
                                @if (category.ParentCategory != null)
                                {
                                    <span class="badge bg-secondary">
                                        <i class="fas fa-folder me-1"></i>
                                        @category.ParentCategory.CategoryName
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-info">
                                        <i class="fas fa-folder-open me-1"></i>
                                        Danh mục cha
                                    </span>
                                }
                                <span class="badge bg-light text-dark">
                                    <i class="fas fa-sort-numeric-up me-1"></i>
                                    Thứ tự: @category.DisplayOrder
                                </span>
                            </div>
                            
                            @if (category.SubCategories.Any() || category.Products.Any())
                            {
                                <div class="category-stats">
                                    @if (category.SubCategories.Any())
                                    {
                                        <span class="stat-item">
                                            <i class="fas fa-sitemap"></i>
                                            @category.SubCategories.Count() danh mục con
                                        </span>
                                    }
                                    @if (category.Products.Any())
                                    {
                                        <span class="stat-item">
                                            <i class="fas fa-box"></i>
                                            @category.Products.Count() sản phẩm
                                        </span>
                                    }
                                </div>
                            }
                        </div>
                        
                        <div class="category-actions">
                            <a href="@Url.Action("Details", new { id = category.CategoryID })" 
                               class="btn btn-sm btn-outline-info" title="Xem chi tiết">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="@Url.Action("Edit", new { id = category.CategoryID })" 
                               class="btn btn-sm btn-outline-warning" title="Chỉnh sửa">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="@Url.Action("Delete", new { id = category.CategoryID })" 
                               class="btn btn-sm btn-outline-danger" title="Xóa">
                                <i class="fas fa-trash"></i>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-state-icon">
                <i class="fas fa-folder-open"></i>
            </div>
            <h4>Chưa có danh mục nào</h4>
            <p>Bắt đầu bằng cách tạo danh mục đầu tiên cho cửa hàng của bạn</p>
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>
                Tạo danh mục đầu tiên
            </a>
        </div>
    }
</div>

<style>
.page-title {
    font-weight: 700;
    margin-bottom: 5px;
}

.category-card {
    background: white;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.category-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.category-image {
    height: 200px;
    position: relative;
    overflow: hidden;
    background: linear-gradient(135deg, var(--jollibee-gray) 0%, #e9ecef 100%);
}

.category-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.category-card:hover .category-image img {
    transform: scale(1.05);
}

.no-image {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    color: #dee2e6;
}

.category-overlay {
    position: absolute;
    top: 15px;
    right: 15px;
}

.category-content {
    padding: 20px;
    flex: 1;
}

.category-title {
    font-weight: 600;
    margin-bottom: 10px;
    color: var(--jollibee-dark);
}

.category-description {
    color: #6c757d;
    font-size: 0.9rem;
    margin-bottom: 15px;
    line-height: 1.5;
}

.category-meta {
    margin-bottom: 15px;
}

.category-meta .badge {
    margin-right: 8px;
    margin-bottom: 5px;
}

.category-stats {
    padding-top: 15px;
    border-top: 1px solid #f1f1f1;
}

.stat-item {
    display: inline-block;
    margin-right: 15px;
    font-size: 0.85rem;
    color: #6c757d;
}

.stat-item i {
    margin-right: 5px;
    color: var(--jollibee-red);
}

.category-actions {
    padding: 15px 20px;
    background: #f8f9fa;
    border-top: 1px solid #dee2e6;
    display: flex;
    gap: 8px;
}

.empty-state {
    text-align: center;
    padding: 60px 20px;
    background: white;
    border-radius: 15px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}

.empty-state-icon {
    font-size: 4rem;
    color: #dee2e6;
    margin-bottom: 20px;
}

.empty-state h4 {
    color: var(--jollibee-dark);
    margin-bottom: 10px;
}

.empty-state p {
    color: #6c757d;
    margin-bottom: 30px;
}

.search-box {
    position: relative;
}

.search-box input {
    padding-left: 40px;
}

.search-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
    z-index: 5;
}
</style>

@section Scripts {
<script>
$(document).ready(function() {
    // Tìm kiếm
    $('#searchInput').on('keyup', function() {
        var searchText = $(this).val().toLowerCase();
        filterCategories();
    });

    // Lọc theo trạng thái
    $('#statusFilter').on('change', function() {
        filterCategories();
    });

    // Lọc theo loại
    $('#parentFilter').on('change', function() {
        filterCategories();
    });

    function filterCategories() {
        var searchText = $('#searchInput').val().toLowerCase();
        var statusFilter = $('#statusFilter').val();
        var parentFilter = $('#parentFilter').val();

        $('.category-item').each(function() {
            var $item = $(this);
            var name = $item.data('name');
            var status = $item.data('status').toString();
            var type = $item.data('type');

            var showItem = true;

            // Lọc theo tên
            if (searchText && !name.includes(searchText)) {
                showItem = false;
            }

            // Lọc theo trạng thái
            if (statusFilter && status !== statusFilter) {
                showItem = false;
            }

            // Lọc theo loại
            if (parentFilter && type !== parentFilter) {
                showItem = false;
            }

            if (showItem) {
                $item.show();
            } else {
                $item.hide();
            }
        });
    }
});
</script>
} 