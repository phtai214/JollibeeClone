@model JollibeeClone.Areas.Admin.Models.PaginatedList<JollibeeClone.Areas.Admin.Models.Store>

@{
    ViewData["Title"] = "Quản lý cửa hàng";
}

@section Styles {
    <link rel="stylesheet" href="~/css/store-admin.css" asp-append-version="true" />
}

<div class="store-index">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="page-title">
                <i class="fas fa-store text-jollibee-red me-2"></i>
                Quản lý cửa hàng
            </h2>
            <p class="text-muted">Danh sách tất cả các cửa hàng trong hệ thống</p>
        </div>
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>
            Thêm cửa hàng mới
        </a>
    </div>

    <!-- Filters and Controls -->
    <div class="card mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get">
                <div class="row align-items-end">
                    <!-- Search -->
                    <div class="col-md-4 mb-3">
                        <label for="searchString" class="form-label">Tìm kiếm cửa hàng</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fas fa-search"></i>
                            </span>
                            <input name="searchString" value="@ViewData["CurrentFilter"]" type="text" class="form-control" placeholder="Tên cửa hàng, địa chỉ..." />
                        </div>
                    </div>

                    <!-- Sort -->
                    <div class="col-md-3 mb-3">
                        <label for="sortOrder" class="form-label">Sắp xếp</label>
                        <select name="sortOrder" class="form-select">
                            <option value="">Tên A-Z</option>
                            <option value="name_desc" @(ViewData["CurrentSort"]?.ToString() == "name_desc" ? "selected" : "")>Tên Z-A</option>
                            <option value="city" @(ViewData["CurrentSort"]?.ToString() == "city" ? "selected" : "")>Thành phố A-Z</option>
                            <option value="city_desc" @(ViewData["CurrentSort"]?.ToString() == "city_desc" ? "selected" : "")>Thành phố Z-A</option>
                            <option value="date" @(ViewData["CurrentSort"]?.ToString() == "date" ? "selected" : "")>Cũ nhất</option>
                            <option value="date_desc" @(ViewData["CurrentSort"]?.ToString() == "date_desc" ? "selected" : "")>Mới nhất</option>
                        </select>
                    </div>

                    <!-- View Toggle -->
                    <div class="col-md-2 mb-3">
                        <label for="view" class="form-label">Hiển thị</label>
                        <select name="view" class="form-select">
                            <option value="grid" @(ViewData["CurrentView"]?.ToString() == "grid" ? "selected" : "")>Dạng lưới</option>
                            <option value="list" @(ViewData["CurrentView"]?.ToString() == "list" ? "selected" : "")>Dạng danh sách</option>
                        </select>
                    </div>

                    <!-- Submit Buttons -->
                    <div class="col-md-3 mb-3">
                        <label class="form-label d-block">&nbsp;</label>
                        <div class="btn-group w-100">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search me-2"></i>
                                Tìm kiếm
                            </button>
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                <i class="fas fa-refresh"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Store Results -->
    <div class="results-container">
        <!-- Results Summary -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="results-summary">
                <span class="badge bg-primary">@Model.TotalCount</span>
                <span>cửa hàng được tìm thấy</span>
                @if (Model.TotalCount > 0)
                {
                    <span class="text-muted ms-2">
                        (Trang @Model.PageIndex của @Model.TotalPages - Hiển thị @((Model.PageIndex - 1) * Model.PageSize + 1) đến @Math.Min(Model.PageIndex * Model.PageSize, Model.TotalCount))
                    </span>
                }
            </div>
            <div class="view-info">
                <span class="text-muted">
                    @if (ViewData["CurrentView"]?.ToString() == "list")
                    {
                        <text>Hiển thị dạng danh sách</text>
                    }
                    else
                    {
                        <text>Hiển thị dạng lưới</text>
                    }
                </span>
            </div>
        </div>

        @if (ViewData["CurrentView"]?.ToString() == "list")
        {
            <!-- List View -->
            <div class="stores-list">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Hình ảnh</th>
                                <th>
                                    <a asp-action="Index" 
                                       asp-route-sortOrder="@ViewData["NameSortParm"]" 
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-view="@ViewData["CurrentView"]"
                                       class="text-decoration-none">
                                        Tên cửa hàng
                                        @if (ViewData["CurrentSort"]?.ToString() == "")
                                        {
                                            <i class="fas fa-sort-up"></i>
                                        }
                                        else if (ViewData["CurrentSort"]?.ToString() == "name_desc")
                                        {
                                            <i class="fas fa-sort-down"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-sort"></i>
                                        }
                                    </a>
                                </th>
                                <th>Địa chỉ</th>
                                <th>
                                    <a asp-action="Index" 
                                       asp-route-sortOrder="@ViewData["CitySortParm"]" 
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-view="@ViewData["CurrentView"]"
                                       class="text-decoration-none">
                                        Thành phố
                                        @if (ViewData["CurrentSort"]?.ToString() == "city")
                                        {
                                            <i class="fas fa-sort-up"></i>
                                        }
                                        else if (ViewData["CurrentSort"]?.ToString() == "city_desc")
                                        {
                                            <i class="fas fa-sort-down"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-sort"></i>
                                        }
                                    </a>
                                </th>
                                <th>Liên hệ</th>
                                <th>Trạng thái</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var store in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="table-image">
                                            @if (!string.IsNullOrEmpty(store.ImageUrl))
                                            {
                                                <img src="@store.ImageUrl" alt="@store.StoreName" 
                                                     onerror="this.onerror=null; this.src='/assets/images/bee.png';" />
                                            }
                                            else
                                            {
                                                <div class="no-image-small">
                                                    <i class="fas fa-store"></i>
                                                </div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <strong>@store.StoreName</strong>
                                    </td>
                                    <td>
                                        <div class="address-info">
                                            <div>@store.StreetAddress</div>
                                            @if (!string.IsNullOrEmpty(store.Ward))
                                            {
                                                <small class="text-muted">@store.Ward, @store.District</small>
                                            }
                                            else
                                            {
                                                <small class="text-muted">@store.District</small>
                                            }
                                        </div>
                                    </td>
                                    <td>@store.City</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(store.PhoneNumber))
                                        {
                                            <div><i class="fas fa-phone text-success me-1"></i>@store.PhoneNumber</div>
                                        }
                                        @if (!string.IsNullOrEmpty(store.OpeningHours))
                                        {
                                            <div><i class="fas fa-clock text-info me-1"></i>@store.OpeningHours</div>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge @(store.IsActive ? "bg-success" : "bg-secondary")">
                                            @(store.IsActive ? "Hoạt động" : "Tạm dừng")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("Details", new { id = store.StoreID })" class="btn btn-sm btn-outline-info" title="Xem chi tiết">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", new { id = store.StoreID })" class="btn btn-sm btn-outline-warning" title="Chỉnh sửa">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("Delete", new { id = store.StoreID })" class="btn btn-sm btn-outline-danger" title="Xóa">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        else
        {
            <!-- Grid View -->
            <div class="stores-grid">
                <div class="row">
                    @foreach (var store in Model)
                    {
                        <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-4">
                            <div class="store-card">
                                <div class="store-image">
                                    @if (!string.IsNullOrEmpty(store.ImageUrl))
                                    {
                                        <img src="@store.ImageUrl" alt="@store.StoreName" 
                                             onerror="this.onerror=null; this.src='/assets/images/bee.png';" />
                                    }
                                    else
                                    {
                                        <div class="no-image">
                                            <i class="fas fa-store fa-2x"></i>
                                        </div>
                                    }
                                    <div class="status-badge">
                                        <span class="badge @(store.IsActive ? "bg-success" : "bg-secondary")">
                                            @(store.IsActive ? "Hoạt động" : "Tạm dừng")
                                        </span>
                                    </div>
                                </div>
                                <div class="store-content">
                                    <h5 class="store-name">@store.StoreName</h5>
                                    <div class="store-address">
                                        <i class="fas fa-map-marker-alt text-jollibee-red me-1"></i>
                                        <span>@store.StreetAddress@(!string.IsNullOrEmpty(store.Ward) ? ", " + store.Ward : ""), @store.District, @store.City</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(store.PhoneNumber))
                                    {
                                        <div class="store-phone">
                                            <i class="fas fa-phone text-success me-1"></i>
                                            <span>@store.PhoneNumber</span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(store.OpeningHours))
                                    {
                                        <div class="store-hours">
                                            <i class="fas fa-clock text-info me-1"></i>
                                            <span>@store.OpeningHours</span>
                                        </div>
                                    }
                                </div>
                                <div class="store-actions">
                                    <a href="@Url.Action("Details", new { id = store.StoreID })" class="btn btn-sm btn-outline-info" title="Xem chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="@Url.Action("Edit", new { id = store.StoreID })" class="btn btn-sm btn-outline-warning" title="Chỉnh sửa">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = store.StoreID })" class="btn btn-sm btn-outline-danger" title="Xóa">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Phân trang cửa hàng">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-sortOrder="@ViewData["CurrentSort"]" 
                               asp-route-pageNumber="@(Model.PageIndex - 1)" 
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               asp-route-view="@ViewData["CurrentView"]">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-sortOrder="@ViewData["CurrentSort"]" 
                               asp-route-pageNumber="@i" 
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               asp-route-view="@ViewData["CurrentView"]">
                                @i
                            </a>
                        </li>
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-sortOrder="@ViewData["CurrentSort"]" 
                               asp-route-pageNumber="@(Model.PageIndex + 1)" 
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               asp-route-view="@ViewData["CurrentView"]">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load cities from API on page load
            loadCitiesForFilter();

            // View Toggle
            $('.view-toggle').on('click', function() {
                const view = $(this).data('view');
                $('.view-toggle').removeClass('active');
                $(this).addClass('active');
                
                if (view === 'grid') {
                    $('#gridView').removeClass('d-none');
                    $('#listView').addClass('d-none');
                    $('#viewInfo').text('Hiển thị dạng lưới');
                } else {
                    $('#gridView').addClass('d-none');
                    $('#listView').removeClass('d-none');
                    $('#viewInfo').text('Hiển thị dạng danh sách');
                }
            });

            // Load cities for filter
            function loadCitiesForFilter() {
                $.ajax({
                    url: 'https://provinces.open-api.vn/api/',
                    method: 'GET',
                    success: function(data) {
                        const $cityFilter = $('#cityFilter');
                        // Keep the "Tất cả thành phố" option
                        $cityFilter.find('option:not(:first)').remove();
                        
                        // Add provinces from API
                        data.forEach(function(province) {
                            $cityFilter.append(`<option value="${province.name.toLowerCase()}">${province.name}</option>`);
                        });
                        
                        console.log('Loaded', data.length, 'cities for filter');
                    },
                    error: function(xhr, status, error) {
                        console.error('Error loading cities for filter:', error);
                        // Fallback to existing cities in database
                        loadExistingCities();
                    }
                });
            }

            // Fallback: Load existing cities from stores in database
            function loadExistingCities() {
                const existingCities = [@Html.Raw(Json.Serialize(Model.Select(s => s.City).Distinct().OrderBy(c => c).ToList()))];
                const $cityFilter = $('#cityFilter');
                
                existingCities.forEach(function(city) {
                    $cityFilter.append(`<option value="${city.toLowerCase()}">${city}</option>`);
                });
                
                console.log('Loaded', existingCities.length, 'existing cities from database');
            }

            // Search and Filter
            function filterStores() {
                const search = $('#searchInput').val().toLowerCase();
                const city = $('#cityFilter').val().toLowerCase();
                const status = $('#statusFilter').val();
                
                let visibleCount = 0;
                
                $('.store-item').each(function() {
                    const $item = $(this);
                    const name = $item.data('name');
                    const address = $item.data('address');
                    const itemCity = $item.data('city');
                    const itemStatus = $item.data('status');
                    
                    let show = true;
                    
                    // Search filter
                    if (search && !name.includes(search) && !address.includes(search)) {
                        show = false;
                    }
                    
                    // City filter - check both exact match and contains
                    if (city) {
                        // Try exact match first, then contains
                        if (itemCity !== city && !itemCity.includes(city)) {
                            show = false;
                        }
                    }
                    
                    // Status filter
                    if (status && itemStatus !== status) {
                        show = false;
                    }
                    
                    if (show) {
                        $item.show();
                        visibleCount++;
                    } else {
                        $item.hide();
                    }
                });
                
                // Update count and show/hide no results
                $('#storeCount').text(visibleCount);
                if (visibleCount === 0) {
                    $('#noResults').removeClass('d-none');
                } else {
                    $('#noResults').addClass('d-none');
                }
            }

            // Sorting
            function sortStores() {
                const sortValue = $('#sortSelect').val();
                const $grid = $('#storeGrid');
                const $table = $('#storeTable');
                
                // Get all items
                const $gridItems = $grid.children('.store-item').toArray();
                const $tableItems = $table.children('.store-item').toArray();
                
                // Sort function
                const sortFn = (a, b) => {
                    const aName = $(a).data('name');
                    const bName = $(b).data('name');
                    const aCity = $(a).data('city');
                    const bCity = $(b).data('city');
                    
                    switch (sortValue) {
                        case 'name':
                            return aName.localeCompare(bName);
                        case 'name-desc':
                            return bName.localeCompare(aName);
                        case 'city':
                            return aCity.localeCompare(bCity);
                        case 'newest':
                            return 0; // Keep original order for newest
                        default:
                            return 0;
                    }
                };
                
                // Sort and append
                $gridItems.sort(sortFn);
                $tableItems.sort(sortFn);
                
                $grid.empty().append($gridItems);
                $table.empty().append($tableItems);
                
                // Reapply filters
                filterStores();
            }

            // Event listeners
            $('#searchInput').on('input', filterStores);
            $('#cityFilter, #statusFilter').on('change', filterStores);
            $('#sortSelect').on('change', sortStores);

            // Clear filters
            window.clearFilters = function() {
                $('#searchInput').val('');
                $('#cityFilter').val('');
                $('#statusFilter').val('');
                $('#sortSelect').val('name');
                filterStores();
            };

            // Animation for store cards
            $('.store-card').hover(
                function() {
                    $(this).addClass('hovered');
                },
                function() {
                    $(this).removeClass('hovered');
                }
            );
        });
    </script>
} 